// <auto-generated />
using CountryHolidaySolution.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CountryHolidaySolution.Infrastructure.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210526150433_udate")]
    partial class udate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CountryHolidaySolution.Domain.Models.SupportedCountry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountryCode")
                        .HasColumnType("int");

                    b.Property<int>("FromDateId")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HolidayTypes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Regions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ToDateId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("CountryHolidaySolution.Domain.Models.SupportedCountry", b =>
                {
                    b.OwnsOne("CountryHolidaySolution.Domain.Models.FromDate", "FromDate", b1 =>
                        {
                            b1.Property<int>("SupportedCountryId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<int>("Day")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .HasColumnType("int");

                            b1.Property<int>("Month")
                                .HasColumnType("int");

                            b1.Property<int>("Year")
                                .HasColumnType("int");

                            b1.HasKey("SupportedCountryId");

                            b1.ToTable("Countries");

                            b1.WithOwner()
                                .HasForeignKey("SupportedCountryId");
                        });

                    b.OwnsOne("CountryHolidaySolution.Domain.Models.ToDate", "ToDate", b1 =>
                        {
                            b1.Property<int>("SupportedCountryId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<int>("Day")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .HasColumnType("int");

                            b1.Property<int>("Month")
                                .HasColumnType("int");

                            b1.Property<int>("Year")
                                .HasColumnType("int");

                            b1.HasKey("SupportedCountryId");

                            b1.ToTable("Countries");

                            b1.WithOwner()
                                .HasForeignKey("SupportedCountryId");
                        });

                    b.Navigation("FromDate");

                    b.Navigation("ToDate");
                });
#pragma warning restore 612, 618
        }
    }
}
